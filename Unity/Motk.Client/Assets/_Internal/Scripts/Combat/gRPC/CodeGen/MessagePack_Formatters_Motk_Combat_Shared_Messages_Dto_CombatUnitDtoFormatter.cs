// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168
#pragma warning disable CS1591 // document public APIs

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.Motk.Combat.Shared.Messages.Dto
{
    public sealed class CombatUnitDtoFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Motk.Combat.Shared.Messages.Dto.CombatUnitDto>
    {

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::Motk.Combat.Shared.Messages.Dto.CombatUnitDto value, global::MessagePack.MessagePackSerializerOptions options)
        {
            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(6);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Serialize(ref writer, value.DescriptorId, options);
            writer.Write(value.Id);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Motk.Combat.Shared.Messages.Dto.HexCoordinatesDto>(formatterResolver).Serialize(ref writer, value.Position, options);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Motk.HexGrid.Core.HexDirection>(formatterResolver).Serialize(ref writer, value.Direction, options);
            writer.Write(value.Count);
            writer.Write(value.CurrentHp);
        }

        public global::Motk.Combat.Shared.Messages.Dto.CombatUnitDto Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                throw new global::System.InvalidOperationException("typecode is null, struct not supported");
            }

            options.Security.DepthStep(ref reader);
            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __DescriptorId__ = default(string);
            var __Id__ = default(byte);
            var __Position__ = default(global::Motk.Combat.Shared.Messages.Dto.HexCoordinatesDto);
            var __Direction__ = default(global::Motk.HexGrid.Core.HexDirection);
            var __Count__ = default(int);
            var __CurrentHp__ = default(float);

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        __DescriptorId__ = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    case 1:
                        __Id__ = reader.ReadByte();
                        break;
                    case 2:
                        __Position__ = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Motk.Combat.Shared.Messages.Dto.HexCoordinatesDto>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    case 3:
                        __Direction__ = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::Motk.HexGrid.Core.HexDirection>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    case 4:
                        __Count__ = reader.ReadInt32();
                        break;
                    case 5:
                        __CurrentHp__ = reader.ReadSingle();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Motk.Combat.Shared.Messages.Dto.CombatUnitDto(__DescriptorId__, __Id__, __Position__, __Direction__, __Count__, __CurrentHp__);
            reader.Depth--;
            return ____result;
        }
    }

}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name
